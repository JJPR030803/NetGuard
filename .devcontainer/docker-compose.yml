services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/network_security
      - REDIS_URL=redis://@redis:6379/0
      - SECRET_KEY=default_insecure_key_change_in_production
      - DEBUG=true
    network_mode: service:postgres
    command: sleep infinity

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: network_security
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../configs/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data:
